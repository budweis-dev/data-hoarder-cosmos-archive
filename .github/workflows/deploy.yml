
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-contracts:
    runs-on: ubuntu-latest
    outputs:
      contracts-deployed: ${{ steps.deploy.outputs.deployed }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npx hardhat compile
    
    - name: Deploy contracts to Sepolia
      id: deploy
      env:
        SEPOLIA_PRIVATE_KEY: ${{ secrets.SEPOLIA_PRIVATE_KEY }}
        INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      run: |
        if [ -n "$SEPOLIA_PRIVATE_KEY" ] && [ -n "$INFURA_PROJECT_ID" ]; then
          npx hardhat run scripts/deploy-sepolia.js --network sepolia
          echo "deployed=true" >> $GITHUB_OUTPUT
        else
          echo "Skipping contract deployment - missing secrets"
          echo "deployed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Update web3 config
      if: steps.deploy.outputs.deployed == 'true'
      run: node scripts/update-config.js
    
    - name: Upload contract artifacts
      uses: actions/upload-artifact@v4
      with:
        name: contract-addresses
        path: |
          contract-addresses.json
          src/config/web3.ts
        retention-days: 30

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-contracts
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download contract artifacts
      if: needs.deploy-contracts.outputs.contracts-deployed == 'true'
      uses: actions/download-artifact@v4
      with:
        name: contract-addresses
    
    - name: Build app
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: your-domain.com # Optional: replace with your custom domain
